name: CI
# We intentionally choose an older version of Ubuntu to make the binary depend on an older version of glibc

on:
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest
            tag: darwin-amd64
          - os: ubuntu-20.04
            tag: linux-amd64
    steps:
      - uses: actions/checkout@v2
      - run: echo "FAVA_VERSION=$(cat FAVA_VERSION)" >> ${{ github.env }}
      - name: Build
        run: |
          ./build.sh
          cd dist && zip -r fava-${{ env.FAVA_VERSION }}-${{ github.run_id }}-${{ matrix.tag }}.zip .
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.tag }}
          path: dist/*.zip
  build-linux-arm64:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: echo "FAVA_VERSION=$(cat FAVA_VERSION)" >> ${{ github.env }}
      - uses: uraimo/run-on-arch-action@v2
        name: Build
        with:
          arch: aarch64
          distro: ubuntu20.04
          githubToken: ${{ github.token }}
          dockerRunArgs: --volume "${PWD}:/src"
          install: |
            apt-get update -q -y
            apt-get install -q -y python3 python3-pip python3-venv zip
          run: |
            cd /src
            FAVA_VERSION=${{ env.FAVA_VERSION }} ./build.sh
            cd dist && zip -r fava-${{ env.FAVA_VERSION }}-${{ github.run_id }}-linux-arm64.zip .
      - uses: actions/upload-artifact@v2
        with:
          name: linux-arm64
          path: dist/*.zip
  release:
    needs: [ build, build-linux-arm64 ]
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: echo "FAVA_VERSION=$(cat FAVA_VERSION)" >> ${{ github.env }}
      - uses: actions/download-artifact@v3
        with:
          path: artifacts
      - name: Zip artifacts
        working-directory: artifacts
        run: |
          for d in */; do
            (cd "$d" && zip -r "../$d.zip" .)
          done
      - run: find artifacts
      - uses: ncipollo/release-action@v1
        with:
          artifacts: "artifacts/**/*.zip"
          tag: "fava-${{ env.FAVA_VERSION }}-${{ github.run_id }}"
          body: "Source: https://pypi.org/project/fava/${{ env.FAVA_VERSION }}/"
          token: ${{ secrets.GITHUB_TOKEN }}
